Expression = 
    Abstraction |
    Application |
    Identifier |
    Builtin |
    ParenExpression;

Abstraction = ("λ" | "\"), {" "}, Identifier, {" "}, ".", {" "}, Expression;

Application = Expression, " ", Expression;

ParenExpression = "(", Expression, ")";

Identifier = "x" | "y" | "z";

Builtin = "If" | "+" | "-" | "*" | "/" | Number;

(* Negative numbers do not exist syntactically. *)
Number = "0" | Positive | Fraction;

Positive = NonZeroDigit, {Digit};

Digit = "0" | NonZeroDigit;

NonZeroDigit = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

Fraction = Positive, "%", Positive;